// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eShop.Persistence.DataAccess;

#nullable disable

namespace eShop.Persistence.DataAccess.Migrations
{
    [DbContext(typeof(EShopDbContext))]
    partial class EShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("eShop.Persistence.DataAccess.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("smallmoney");

                    b.HasKey("Id");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "SOLID principles book",
                            ImgUri = "solid.jpg",
                            Name = "SOLID",
                            Price = 11m
                        },
                        new
                        {
                            Id = 2,
                            Description = ".NET Book",
                            ImgUri = "net.jpg",
                            Name = ".NET",
                            Price = 12m
                        },
                        new
                        {
                            Id = 3,
                            ImgUri = "csharp.jpg",
                            Name = "C#",
                            Price = 13m
                        },
                        new
                        {
                            Id = 4,
                            ImgUri = "cqrs.jpg",
                            Name = "CQRS",
                            Price = 14m
                        },
                        new
                        {
                            Id = 5,
                            ImgUri = "onion.jpg",
                            Name = "Clean Architecture",
                            Price = 15m
                        },
                        new
                        {
                            Id = 6,
                            ImgUri = "tests.jpg",
                            Name = "Tests",
                            Price = 16m
                        },
                        new
                        {
                            Id = 7,
                            ImgUri = "designpatterns.jpg",
                            Name = "Design Patterns",
                            Price = 17m
                        },
                        new
                        {
                            Id = 8,
                            ImgUri = "api.jpg",
                            Name = "Api",
                            Price = 18m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
